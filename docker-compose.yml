version: '3.8'

services:
  # Application service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: solport-app:latest
    container_name: solport-app
    restart: unless-stopped
    expose:
      - "8080"
    volumes:
      - ./logs:/app/logs
    env_file:
      - .env
    environment:
      - DB_TYPE=postgres
      - DB_HOST=${DB_HOST:-db.ribbuizuedswvmboanic.supabase.co}
      - DB_PORT=${DB_PORT:-5432}
      - DB_NAME=${DB_NAME:-postgres}
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_SSLMODE=${DB_SSLMODE:-disable}
      - DB_GSSENCMODE=${DB_GSSENCMODE:-disable}
      - DB_POOL_SIZE=${DB_POOL_SIZE:-10}
      - DB_MAX_OVERFLOW=${DB_MAX_OVERFLOW:-20}
      - DB_POOL_TIMEOUT=${DB_POOL_TIMEOUT:-30}
      - DB_POOL_RECYCLE=${DB_POOL_RECYCLE:-1800}
      - FLASK_ENV=${FLASK_ENV:-production}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS:-*}
    networks:
      - solport-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/healthcheck"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
  
  # Nginx service for serving the application with HTTPS
  nginx:
    image: nginx:alpine
    container_name: solport-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/www:/var/www/html
    depends_on:
      - app
    networks:
      - solport-network

networks:
  solport-network:
    driver: bridge

volumes:
  postgres-data: 